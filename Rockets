import pygame
import sys
import random
import math
screen_size=[600,600]
pygame.init()
black=(100,100,100)
clock = pygame.time.Clock()

class Rocket():
        def __init__(self):
            self.screen=pygame.display.set_mode((screen_size[0],screen_size[1]))
            self.white=(255,255,255)
            self.black=(0,0,0)
            self.height=30
            self.width=10
            self.refresh=10
            self.acc_x=0
            self.vel_x=0
            self.vel_y=0
            self.acc_y=0
            self.x=300
            self.y=570
           
        def show(self):
            pygame.draw.rect(self.screen, (self.black),[self.x, self.y, self.width, self.height])
            
        def update(self):
            self.acc_x+=random.randint(-1,1)
            self.vel_x+=self.acc_x
            self.x+=self.vel_x
            self.acc_y-=random.randint(-1,1)
            self.vel_y-=self.acc_y
            self.y+=self.vel_y
            # self.screen.fill(self.white)
            # self.rocket=pygame.draw.rect(self.screen, (self.black),[self.x, self.y, self.width, self.height])
            # pygame.display.flip()
            # clock.tick(self.refresh)


class pop():
        def __init__(self):
                self.pop_size=5
                self.all_rockets=[]

        def create_pops(self):
                for i in range(self.pop_size):
                        self.all_rockets.append(Rocket())

        def update(self):
                pygame.display.fill((255,255,255))
                for rocket in self.all_rockets:
                        rocket.update()
                        rocket.show()
                pygame.display.flip()
                clock.tick(10)
    
if __name__ == '__main__':
    Pop=pop()
    Pop.create_pops()
    while True :
        Pop.update()


        for event in pygame.event.get():
            if event.type == pygame.QUIT:
                pygame.quit()
                sys.exit()
